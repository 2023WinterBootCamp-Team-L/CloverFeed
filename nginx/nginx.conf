# # include       /etc/nginx/mime.types;
# # default_type  application/octet-stream;

events {
    worker_connections 1024;
}

http {
    upstream backend {
        server backend:8000; # Docker Compose에서 정의한 서비스 이름 사용
    }

    server {
        listen 80;
        server_name cloverfeed.kr; # 차후 배포 시 우리 도메인 이름으로 설정해야 함!
        
        # Allow only for register SSL (Certbot)
        location /.well-known/acme-challenge/ {
            allow all;
            root /var/www/certbot;
        }

        # Http로 들어온 요청을 Https로 Redirect
        location / {
            return 301 https://$host$request_uri;
        }
    }

    server {
        listen 443 ssl;
        server_name cloverfeed.kr; # 차후 배포 시 우리 도메인 이름으로 설정해야 함!
        server_tokens off; # 응답 헤더에서 서버 정보를 감춥니다.
        client_max_body_size 1G; # 클라이언트로부터 전송되는 요청의 최대 크기를 1GB로 제한합니다.

        ssl_certificate /etc/letsencrypt/live/cloverfeed.kr/fullchain.pem;  # ssl 인증서 사용
        ssl_certificate_key /etc/letsencrypt/live/cloverfeed.kr/privkey.pem;
        include /etc/letsencrypt/options-ssl-nginx.conf;
        ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

        location / {
            root /var/www/frontend; # location에서 정의된 특정 URL이 아닌 루트로 들어오면 기본값으로서 Nginx 컨테이너 안의 /var/www/frontend 내부의 (리액트에서 빌드해준) 정적 파일로 응답한다.
            index  index.html index.htm;
            try_files $uri $uri/ /index.html;
            include /etc/nginx/mime.types;
        }

        location /admin/ {
            proxy_pass http://backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        location /api/ {
            proxy_pass http://backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        location /swagger/ {
            proxy_pass http://backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        location /static/ {
            alias /backend/static/;
        }
    }
}